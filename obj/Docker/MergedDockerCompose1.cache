name: dockercompose510043015657040348
services:
  SqlServerDb:
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: myStong_Password123#
    image: mcr.microsoft.com/mssql/server:2017-latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 1433
        published: "5533"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\scripts\myproject
        target: /path/to/dir
        bind:
          create_host_path: true
  apigateway:
    build:
      context: C:\SourceTest\DemoDocker\Nginx
      dockerfile: Dockerfile
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "80"
        protocol: tcp
      - mode: ingress
        target: 1024
        published: "1024"
        protocol: tcp
      - mode: ingress
        target: 443
        published: "443"
        protocol: tcp
    restart: always
  demodocker.auth.api:
    build:
      context: C:\SourceTest\DemoDocker
      dockerfile: DemoDocker.Auth.API/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: DemoDocker.Auth.API
      target: base
    container_name: DemoDocker.Auth.API
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8084"
      ASPNETCORE_HTTPS_PORTS: "8085"
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+;http://+
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: /.nuget/fallbackpackages
    image: demodockerauthapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages --additionalProbingPath /.nuget/fallbackpackages  "/app/bin/Debug/net8.0/DemoDocker.Auth.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8084"
        protocol: tcp
      - mode: ingress
        target: 443
        published: "8085"
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages
        target: /.nuget/fallbackpackages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\abdeljalil\.nuget\packages\
        target: /.nuget/packages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Preview\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net8.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\SourceTest\DemoDocker\DemoDocker.Auth.API
        target: /app
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\abdeljalil\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\abdeljalil\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\abdeljalil\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\abdeljalil\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\abdeljalil\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\SourceTest\DemoDocker
        target: /src
        bind:
          create_host_path: true
  demodocker.todo.api:
    build:
      context: C:\SourceTest\DemoDocker
      dockerfile: DemoDocker.API/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: DemoDocker.API
      target: base
    container_name: DemoDocker.API
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+;http://+
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: /.nuget/fallbackpackages
    image: demodockerapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages --additionalProbingPath /.nuget/fallbackpackages  "/app/bin/Debug/net8.0/DemoDocker.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8080"
        protocol: tcp
      - mode: ingress
        target: 443
        published: "8081"
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages
        target: /.nuget/fallbackpackages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\abdeljalil\.nuget\packages\
        target: /.nuget/packages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Preview\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net8.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\SourceTest\DemoDocker\DemoDocker.API
        target: /app
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\abdeljalil\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\abdeljalil\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\abdeljalil\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\abdeljalil\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\abdeljalil\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\SourceTest\DemoDocker
        target: /src
        bind:
          create_host_path: true
  demodocker.user.api:
    build:
      context: C:\SourceTest\DemoDocker
      dockerfile: DemoDocker.User.Api/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: DemoDocker.User.Api
      target: base
    container_name: DemoDocker.User.Api
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8082"
      ASPNETCORE_HTTPS_PORTS: "8083"
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+;http://+
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: /.nuget/fallbackpackages
    image: demodockeruserapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages --additionalProbingPath /.nuget/fallbackpackages  "/app/bin/Debug/net8.0/DemoDocker.User.Api.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8082"
        protocol: tcp
      - mode: ingress
        target: 443
        published: "8083"
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages
        target: /.nuget/fallbackpackages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\abdeljalil\.nuget\packages\
        target: /.nuget/packages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Preview\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net8.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\SourceTest\DemoDocker\DemoDocker.User.Api
        target: /app
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\abdeljalil\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\abdeljalil\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\abdeljalil\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\abdeljalil\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\abdeljalil\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\SourceTest\DemoDocker
        target: /src
        bind:
          create_host_path: true
  myredise:
    command:
      - redis-server
      - --requirepass
      - yourpassword
    image: redis
    networks:
      default: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
networks:
  default:
    name: dockercompose510043015657040348_default